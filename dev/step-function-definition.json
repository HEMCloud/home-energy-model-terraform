{
  "Comment": "A Hello World example of the Amazon States Language using Pass states",
  "QueryLanguage": "JSONata",
  "StartAt": "Set evaluation uuid variable",
  "States": {
    "Set evaluation uuid variable": {
      "Type": "Pass",
      "Next": "Set evaluationStatus to IN PROGRESS, remove old hemLambdaErrorReason",
      "Assign": {
        "uuid": "{% $states.input.uuid %}"
      }
    },
    "Set evaluationStatus to IN PROGRESS, remove old hemLambdaErrorReason": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Arguments": {
        "TableName": "hem-model-runs",
        "Key": {
          "uuid": {
            "S": "{% $uuid %}"
          }
        },
        "UpdateExpression": "SET evaluationStatus = :newStatus REMOVE hemLambdaErrorReason",
        "ExpressionAttributeValues": {
          ":newStatus": {
            "S": "IN PROGRESS"
          }
        }
      },
      "Next": "Get input.json"
    },
    "Get input.json": {
      "Type": "Task",
      "Arguments": {
        "Bucket": "hem-dev-model-runs",
        "Key": "{% $uuid & '/input.json' %}"
      },
      "Resource": "arn:aws:states:::aws-sdk:s3:getObject",
      "Next": "Invoke HEM Lambda",
      "Output": "{% $states.result.Body %}"
    },
    "Invoke HEM Lambda": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Output": "{% $states.result.Payload %}",
      "Arguments": {
        "FunctionName": "${latest_hem_model_lambda_arn}",
        "Payload": "{% $states.input %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Next": "Put output.json",
      "Catch": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "Comment": "Handle failure",
          "Next": "Set evaluationStatus to FAILED, set hemLambdaErrorReason"
        }
      ]
    },
    "Set evaluationStatus to FAILED, set hemLambdaErrorReason": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Arguments": {
        "TableName": "hem-model-runs",
        "Key": {
          "uuid": {
            "S": "{% $uuid %}"
          }
        },
        "UpdateExpression": "SET evaluationStatus = :newStatus, hemLambdaErrorReason = :hemLambdaErrorReason",
        "ExpressionAttributeValues": {
          ":newStatus": {
            "S": "FAILED"
          },
          ":hemLambdaErrorReason": {
            "M": "{% $states.input %}"
          }
        }
      },
      "Output": "{% $states.input %}",
      "Next": "Re-raise error"
    },
    "Re-raise error": {
      "Type": "Fail",
      "Error": "{% $states.input.Error %}",
      "Cause": "{% $states.input.Cause %}"
    },
    "Put output.json": {
      "Type": "Task",
      "Arguments": {
        "Body": "{% $states.input %}",
        "Bucket": "hem-dev-model-runs",
        "Key": "{% $uuid & '/output.json' %}"
      },
      "Resource": "arn:aws:states:::aws-sdk:s3:putObject",
      "Next": "Set evaluationStatus to COMPLETE"
    },
    "Set evaluationStatus to COMPLETE": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Arguments": {
        "TableName": "hem-model-runs",
        "Key": {
          "uuid": {
            "S": "{% $uuid %}"
          }
        },
        "UpdateExpression": "SET evaluationStatus = :newStatus",
        "ExpressionAttributeValues": {
          ":newStatus": {
            "S": "COMPLETE"
          }
        }
      },
      "End": true
    }
  }
}
