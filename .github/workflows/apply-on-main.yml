name: HCP Terraform Apply Run

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to apply the Terraform configuration to'
        required: true
        type: choice
        options:
          - dev
          - prd
  # push:
  #   branches:
  #     - main

# This limits concurrent runs to 1, to prevent conflicts when applying
concurrency: terraform-apply

env:
  TF_CLOUD_ORGANIZATION: "${{ vars.TF_CLOUD_ORGANIZATION }}"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  CONFIG_DIRECTORY: "./"
  TF_LOG: DEBUG
  TF_MAX_TIMEOUT: "10m"
  TF_VAR_api_lambda_image_uri: '"317467111462.dkr.ecr.eu-west-2.amazonaws.com/hem-lambda-image-repository:hemapifunction-f85a3d4fb428-python3.13-hem-api"'
  TF_VAR_hem_lambda_image_uri: '"317467111462.dkr.ecr.eu-west-2.amazonaws.com/hem-lambda-image-repository:hemlambdafunction-d309c0d00ba6-python3.9-hem"'
  TF_VAR_dynamo_stream_lambda_s3_object_key: '"dynamo-stream-orchestrator-lambda-zips/86e33ea776d0c635d9cfd6560d463d21"'

jobs:
  terraform-cloud-apply-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.2
        id: upload
        with:
          workspace: "${{ inputs.environment }}"
          directory: ${{ env.CONFIG_DIRECTORY }}

      - uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.2
        id: create-run
        with:
          workspace: "${{ inputs.environment }}"
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}

      - uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.3.2
        id: apply
        if: ${{ fromJSON(steps.create-run.outputs.payload).data.attributes.actions.IsConfirmable }}
        with:
          run: ${{ steps.create-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"
